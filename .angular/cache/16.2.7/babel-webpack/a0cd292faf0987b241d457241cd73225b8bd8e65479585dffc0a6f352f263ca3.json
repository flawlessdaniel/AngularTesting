{"ast":null,"code":"import { v4 as uuid } from 'uuid';\nimport * as i0 from \"@angular/core\";\nexport class DbzService {\n  constructor() {\n    this.Personajes = [{\n      id: uuid(),\n      nombre: 'Gohan',\n      poder: 15000\n    }, {\n      id: uuid(),\n      nombre: 'Trunks',\n      poder: 8500\n    }, {\n      id: uuid(),\n      nombre: 'Gotens',\n      poder: 8500\n    }];\n  }\n  onNuevoPersonaje(pj) {\n    const newPj = {\n      id: uuid(),\n      ...pj\n    };\n    this.personajes.push(newPj);\n  }\n  onDeletePersonaje(index) {\n    this.personajes.splice(index, 1);\n  }\n  onDeletePersonajeById(id) {\n    this.personajes = this.personajes.filter(pj => pj.id !== id);\n  }\n  static #_ = this.ɵfac = function DbzService_Factory(t) {\n    return new (t || DbzService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DbzService,\n    factory: DbzService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["v4","uuid","DbzService","constructor","Personajes","id","nombre","poder","onNuevoPersonaje","pj","newPj","personajes","push","onDeletePersonaje","index","splice","onDeletePersonajeById","filter","_","_2","factory","ɵfac","providedIn"],"sources":["D:\\Daniel\\Angular\\Angular-Project\\src\\app\\dbz\\services\\dbz.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Personaje } from '../interfaces/Personaje';\nimport { v4 as uuid } from 'uuid';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DbzService {\n\n  Personajes : Personaje[] = [\n    {\n      id: uuid(),\n      nombre: 'Gohan',\n      poder: 15000\n    },\n    {\n      id: uuid(),\n      nombre: 'Trunks',\n      poder: 8500\n    },\n    {\n      id: uuid(),\n      nombre: 'Gotens',\n      poder: 8500\n    }\n  ]\n\n  public onNuevoPersonaje(pj: Personaje): void {\n    const newPj: Personaje = { id: uuid(), ...pj}\n    this.personajes.push(newPj);\n  }\n\n  public onDeletePersonaje(index: number): void {\n    this.personajes.splice(index, 1);\n  }\n\n  public onDeletePersonajeById(id: string): void {\n    this.personajes = this.personajes.filter(pj => pj.id !== id);\n  }\n\n}\n"],"mappings":"AAEA,SAASA,EAAE,IAAIC,IAAI,QAAQ,MAAM;;AAKjC,OAAM,MAAOC,UAAU;EAHvBC,YAAA;IAKE,KAAAC,UAAU,GAAiB,CACzB;MACEC,EAAE,EAAEJ,IAAI,EAAE;MACVK,MAAM,EAAE,OAAO;MACfC,KAAK,EAAE;KACR,EACD;MACEF,EAAE,EAAEJ,IAAI,EAAE;MACVK,MAAM,EAAE,QAAQ;MAChBC,KAAK,EAAE;KACR,EACD;MACEF,EAAE,EAAEJ,IAAI,EAAE;MACVK,MAAM,EAAE,QAAQ;MAChBC,KAAK,EAAE;KACR,CACF;;EAEMC,gBAAgBA,CAACC,EAAa;IACnC,MAAMC,KAAK,GAAc;MAAEL,EAAE,EAAEJ,IAAI,EAAE;MAAE,GAAGQ;IAAE,CAAC;IAC7C,IAAI,CAACE,UAAU,CAACC,IAAI,CAACF,KAAK,CAAC;EAC7B;EAEOG,iBAAiBA,CAACC,KAAa;IACpC,IAAI,CAACH,UAAU,CAACI,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;EAClC;EAEOE,qBAAqBA,CAACX,EAAU;IACrC,IAAI,CAACM,UAAU,GAAG,IAAI,CAACA,UAAU,CAACM,MAAM,CAACR,EAAE,IAAIA,EAAE,CAACJ,EAAE,KAAKA,EAAE,CAAC;EAC9D;EAAC,QAAAa,CAAA,G;qBA/BUhB,UAAU;EAAA;EAAA,QAAAiB,EAAA,G;WAAVjB,UAAU;IAAAkB,OAAA,EAAVlB,UAAU,CAAAmB,IAAA;IAAAC,UAAA,EAFT;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
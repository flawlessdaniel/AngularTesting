{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../Services/gift.service\";\nconst _c0 = [\"txtSearchBox\"];\nexport class SearchboxComponent {\n  constructor(_gifService) {\n    this._gifService = _gifService;\n  }\n  onSearch(event, query) {\n    if (event.key !== 'Enter') return;\n    console.log(query);\n    this._gifService.addQuery(query);\n    this.txtSearchBox.value = '';\n  }\n  static #_ = this.ɵfac = function SearchboxComponent_Factory(t) {\n    return new (t || SearchboxComponent)(i0.ɵɵdirectiveInject(i1.GifsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchboxComponent,\n    selectors: [[\"gifs-searchbox\"]],\n    viewQuery: function SearchboxComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.txtSearchBox = _t.first);\n      }\n    },\n    decls: 4,\n    vars: 0,\n    consts: [[\"id\", \"txtSearchBox\", \"name\", \"txtSearchBox\", \"type\", \"text\", \"placeholder\", \"Search Tag...\", 1, \"form-control\", 3, \"keyup\"], [\"txtSearchBoxControl\", \"\"]],\n    template: function SearchboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"Search Gifs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"input\", 0, 1);\n        i0.ɵɵlistener(\"keyup\", function SearchboxComponent_Template_input_keyup_2_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(3);\n          return i0.ɵɵresetView(ctx.onSearch($event, _r0.value));\n        });\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["SearchboxComponent","constructor","_gifService","onSearch","event","query","key","console","log","addQuery","txtSearchBox","value","_","i0","ɵɵdirectiveInject","i1","GifsService","_2","selectors","viewQuery","SearchboxComponent_Query","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","SearchboxComponent_Template_input_keyup_2_listener","$event","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView"],"sources":["D:\\Daniel\\Angular\\Gift-Angular-Project\\Gift\\src\\app\\Gifs\\Components\\searchbox\\searchbox.component.ts","D:\\Daniel\\Angular\\Gift-Angular-Project\\Gift\\src\\app\\Gifs\\Components\\searchbox\\searchbox.component.html"],"sourcesContent":["import { Component, ViewChild, ViewChildren } from '@angular/core';\nimport { GifsService } from '../../Services/gift.service';\n\n@Component({\n  selector: 'gifs-searchbox',\n  templateUrl: './searchbox.component.html',\n  styleUrls: ['./searchbox.component.css']\n})\nexport class SearchboxComponent {\n\n  constructor(private _gifService:GifsService) { }\n\n  @ViewChild(\"txtSearchBox\", {static: false}) txtSearchBox!: HTMLInputElement;\n\n  public onSearch(event: KeyboardEvent, query: string): void {\n    if (event.key !== 'Enter') return;\n    console.log(query);\n    this._gifService.addQuery(query);\n    this.txtSearchBox.value = '';\n  }\n\n}\n","<h3>Search Gifs</h3>\n<input\n  id=\"txtSearchBox\"\n  name=\"txtSearchBox\"\n  #txtSearchBoxControl\n  type=\"text\"\n  class=\"form-control\"\n  placeholder=\"Search Tag...\"\n  (keyup)=\"onSearch($event, txtSearchBoxControl.value);\"/>\n"],"mappings":";;;AAQA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;EAAgB;EAIxCC,QAAQA,CAACC,KAAoB,EAAEC,KAAa;IACjD,IAAID,KAAK,CAACE,GAAG,KAAK,OAAO,EAAE;IAC3BC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;IAClB,IAAI,CAACH,WAAW,CAACO,QAAQ,CAACJ,KAAK,CAAC;IAChC,IAAI,CAACK,YAAY,CAACC,KAAK,GAAG,EAAE;EAC9B;EAAC,QAAAC,CAAA,G;qBAXUZ,kBAAkB,EAAAa,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBjB,kBAAkB;IAAAkB,SAAA;IAAAC,SAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;;;;QCR/BR,EAAA,CAAAU,cAAA,SAAI;QAAAV,EAAA,CAAAW,MAAA,kBAAW;QAAAX,EAAA,CAAAY,YAAA,EAAK;QACpBZ,EAAA,CAAAU,cAAA,kBAO0D;QAAxDV,EAAA,CAAAa,UAAA,mBAAAC,mDAAAC,MAAA;UAAAf,EAAA,CAAAgB,aAAA,CAAAC,GAAA;UAAA,MAAAC,GAAA,GAAAlB,EAAA,CAAAmB,WAAA;UAAA,OAASnB,EAAA,CAAAoB,WAAA,CAAAX,GAAA,CAAAnB,QAAA,CAAAyB,MAAA,EAAAG,GAAA,CAAApB,KAAA,CAA2C;QAAA,EAAE;QAPxDE,EAAA,CAAAY,YAAA,EAO0D"},"metadata":{},"sourceType":"module","externalDependencies":[]}